name: Publish

permissions:
  contents: write
  packages: write

on:
  push: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - run: go version

      - name: Test
        run: |
          go test ./...

      - name: Build For Linux x86_64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o dist/dnsever-rfc2136-bridge-linux_x86_64 ./cmd/server

      - name: Build For Linux arm64
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o dist/dnsever-rfc2136-bridge-linux_arm64 ./cmd/server

      - name: Build For Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -o dist/dnsever-rfc2136-bridge-windows_x86_64.exe ./cmd/server

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # ===== DOCKER IMAGE PUSH =====
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{ github.event_name == 'push' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/dnsever-rfc2136-bridge

      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server.Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ steps.docker_meta.outputs.tags }}

  release:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/*
